services:
  db:
    image: postgres:latest
    container_name: dbtestpgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Admin123*
      POSTGRES_DB: usuariosdb
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_INITDB_ARGS: "--data-checksums"
    ports:
      - "5433:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build: ./Backend
    container_name: backend
    ports:
      - "5000:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - POSTGRES_CONNECTION=Host=db;Port=5432;Database=usuariosdb;Username=postgres;Password=Admin123*
    networks:
      - my_network

  frontend:
    build: ./Frontend
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - my_network

volumes:
  pg_data:
    driver: local

networks:
  my_network:
    driver: bridge